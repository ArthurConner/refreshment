# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/05_staticGenerator.ipynb (unless otherwise specified).

__all__ = ['Render']

# Cell
import os
import sys
from jinja2 import Environment, FileSystemLoader, Template

# Cell
from .School import StudySystem
from .Program import Program, Subject, Record, Lesson

# Cell

class Render:
    def __init__(self, program, dir="../../web",template = "../templates"):
        self.program = program
        self.outputdir = os.path.join(dir,program.name)
        self.template = template

        self.file_loader = FileSystemLoader(self.template)
        self.env = Environment(loader=self.file_loader)


    def basePath(self):
        return self.outputdir

    def renderSubject(self,sub):
        template = self.env.get_template("subject.html")
        videos = [x for x in sub.lessons if x.fileName.endswith(".mp4")]
        resources = [x for x in sub.lessons if not x.fileName.endswith(".mp4")]
        resDir = "../../.."
        output = template.render(item=sub,videos=videos,res=resources,resDir = resDir,program = self.program)
        subDir = os.path.join(self.outputdir,sub.name)

        if not os.path.exists(subDir):
            os.mkdir(subDir)
        f = open(os.path.join(subDir,"index.html"), "w")
        f.write(output)

    def renderSchool(self):

        foo = self.program.subjects
        seq = sorted(foo, key=lambda x: x.name)

        for x in seq:
            self.renderSubject(x)

        template = self.env.get_template("school.html")
        output = template.render(name=self.program.name,seq=seq)

        f = open(os.path.join(self.outputdir,"index.html"), "w")
        f.write(output)
        f.close()
